/*
This file contains mixins and classes to be used
with @include and @extend.  Add any new mixins here.
*/

//////////  Layout  ///////////////

/* These iterative classes can be used
   in the html, familiar technique for
   Bootstrap users. */

@for $i from 1 through $columns {
  .col-#{$i} {
    @include span($i);
    &.col-last {
      @include span($i last);
    }
  }
  // collapse all to 100%
  @if $i < 12 {
    .col-#{$i} {
      @media #{$bp-mobile} {
        @include span(12 of 12);
        &.col-last {
          @include span(12 of 12);
        }
      }
    }
  }
}

/* This mixin is a solution to avoid the 
   Bootstrap mobile layout with margin, negative
   margin, and padding.  Use this optionally by
   making a breakpoint that is max-layout-size
   plus outer padding, and putting that breakpoint
   to add the right layout. */

@mixin mobile-layout($padding: 20px) {
  @media #{$bp-mobile-padding} {
    padding-left: $padding;
    padding-right: $padding;
  }
}

/*
Default grid should be the outer container for any susy grid
It is included as a class so it may be extended using @extend.
Change the padding here to change default outer grid padding.
Extend .default-grid on either the site container, or around
Individual components as necessary.
*/

@mixin default-grid($padding: 20px) {
  @include container();
  margin-left: auto;
  margin-right: auto;

  @include mobile-layout();
}
.default-grid {
  @include default-grid();
}

.padding-top {
  padding-top: $top-padding !important;
}

.padding-bottom {
  padding-bottom: $bottom-padding !important;
}

.margin-top {
  padding-top: $top-margin !important;
}

.margin-bottom {
  padding-top: $bottom-margin !important;
}

@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin transform($transform) {
  -webkit-transform: $transform;
      -ms-transform: $transform;
          transform: $transform;
}

@mixin grow() {
  -webkit-transition: -webkit-transform .3s linear;
        transition: transform .3s linear;

  &:hover {
      -webkit-transform: scale(1.5);
          -ms-transform: scale(1.5);
              transform: scale(1.5);
      -webkit-transition: -webkit-transform .15s linear;
              transition: transform .15s linear;
  }
}

.clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

.screen-reader-text {
  position:absolute;
  left:-10000px;
  top:auto;
  width:1px;
  height:1px;
  overflow:hidden;
}

// Wordpress Specific
$wp-center: 5px auto 5px auto;
$wp-left:   5px 90px 70px 0;
$wp-right:  5px 0 70px 90px;

.aligncenter {
  display: block;
  margin: $wp-center;
}

.alignleft {
  float: left;
  margin: $wp-left;
}

.alignnone {
  margin: $wp-left;
}

.alignright {
  float: right;
  margin: $wp-right;
}

a {
  img {
    &.aligncenter {
      @extend .aligncenter;
    }

    &.alignleft {
      @extend .alignleft;
    }

    &.alignnone {
      @extend .alignnone;
    }

    &.alignright {
      @extend .alignright;
    }
  }
}

// Typography Mixins

@mixin default-font($font-family: $font-1, $font-size: 16px, $line-height: 24px, $color: $c-black){  
  font-family: $font-family;
  font-size: $font-size;
  line-height:$line-height;
  color: $color;
}
.default-font {
  @include default-font();
}

@mixin h2-style($font-family: $font-1, $font-size: 60px, $line-height: 80px, $color: $c-black) {
  font-family: $font-family;
  font-size: $font-size;
  line-height: $line-height;
  color: $color;
}

@mixin h3-style($font-family: $font-1, $font-size: 40px, $line-height: 50px, $color: $c-black) {
  font-family: $font-family;
  font-size: $font-size;
  color: $color;
  line-height: $line-height;
  font-weight: normal;
}

@mixin h4-style($font-family: $font-2, $font-size: 30px, $line-height: 40px, $color: $c-black) {
  font-family: $font-family;
  font-size: $font-size;
  color: $color;
  line-height: $line-height;
}

@mixin h5-style($font-family: $font-2, $font-size: 20px, $line-height: 24px, $color: $c-black) {
  font-family: $font-family;
  font-size: $font-size;
  color: $color;
  line-height: $line-height;
  font-weight: bold;
}

@mixin placeholder($color) {
  &::-webkit-input-placeholder { /* WebKit, Blink, Edge */
      color:    $color;
  }
  &:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
     color:    $color;
     opacity:  1;
  }
  &::-moz-placeholder { /* Mozilla Firefox 19+ */
     color:    $color;
     opacity:  1;
  }
  &:-ms-input-placeholder { /* Internet Explorer 10-11 */
     color:    $color;
  }
  &::-ms-input-placeholder { /* Microsoft Edge */
     color:    $color;
  }
}

// Buttons

@mixin button($padding: 5px 10px,$borderColor: $accent, $textColor:$accent, $accentColor: $c-white) {
  padding: $padding;
  border: 2px solid $borderColor;
  color: $textColor;
  text-decoration: none;
  font-family: $font-2;
  display: inline-block;
  text-transform: uppercase;
  transition: .2s;
  transform: scale(1);
  letter-spacing: 2px;

  &:hover {
    background-color: $borderColor;
    text-decoration: none;
    color: $c-black;
    transition: .2s;
    transform: scale(1.1);
  }
}

.pilot-video-button {
  @include button();
  padding-left: 35px;
  background: url(../../image/play-button.svg) 10px 14px no-repeat;
  background-size: 16px 18px;

  &:hover {
    background-color: transparent;
  }
}

.pilot-button {
  @include button();
}